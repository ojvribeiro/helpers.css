@use 'variables' as var;
@use 'sizes' as sz;
@use 'media-queries' as mq;

$sides: (
  x: x, // horizontal
  y: y, // vertical
  s: left, // 's' stands for 'start'
  e: right, // 'e' stands for 'end'
  t: top,
  b: bottom,
);


// General padding
@each $size-name, $size-value in var.$sizes {
  .#{var.$prefix}p-#{$size-name} {
    padding: sz.size($size-value) !important;
  }
}


// Sides paddings
@each $side-name, $side-value in $sides {
  @each $size-name, $size-value in var.$sizes {
    .#{var.$prefix}p#{$side-name}-#{$size-name} {
      @if $side-name == x {
        padding-left: sz.size($size-value) !important;
        padding-right: sz.size($size-value) !important;
      }
      @else if $side-name == y {
        padding-top: sz.size($size-value) !important;
        padding-bottom: sz.size($size-value) !important;
      }
      @else {
        padding-#{$side-value}: sz.size($size-value) !important;
      }
    }
  }
}



// Paddings with breakpoints
@each $bp-name, $bp-value in mq.$breakpoints {
  @include mq.media($bp-name) {
    // General padding
    @each $size-name, $size-value in var.$sizes {
      .#{var.$prefix}p-#{$bp-name}-#{$size-name} {
        padding: sz.size($size-value) !important;
      }
    }


    // Sides paddings
    @each $side-name, $side-value in $sides {
      @each $size-name, $size-value in var.$sizes {
        .#{var.$prefix}p#{$side-name}-#{$bp-name}-#{$size-name} {
          @if $side-name == x {
            padding-left: sz.size($size-value) !important;
            padding-right: sz.size($size-value) !important;
          }
          @else if $side-name == y {
            padding-top: sz.size($size-value) !important;
            padding-bottom: sz.size($size-value) !important;
          }
          @else {
            padding-#{$side-value}: sz.size($size-value) !important;
          }
        }
      }
    }
  }
}