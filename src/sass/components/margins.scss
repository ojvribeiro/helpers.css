@use 'sass:math';

$sides: (
  x: x, // horizontal
  y: y, // vertical
  s: left, // 's' stands for 'start'
  e: right, // 'e' stands for 'end'
  t: top,
  b: bottom,
);


/**
 * Margins
 * */

// General margin
@each $size-name, $size-value in $sizes {
  .b\:m-#{$size-name} {
    margin: size($size-value) !important;
  }
}


// Sides margins
@each $side-name, $side-value in $sides {
  @each $size-name, $size-value in $sizes {
    .b\:m#{$side-name}-#{$size-name} {
      @if $side-name == x {
        margin-left: size($size-value) !important;
        margin-right: size($size-value) !important;
      }
      @else if $side-name == y {
        margin-top: size($size-value) !important;
        margin-bottom: size($size-value) !important;
      }
      @else {
        margin-#{$side-value}: size($size-value) !important;
      }
    }
  }
}




// Margins with breakpoints
@each $query, $query-value in $queries {
  @include media($query-value) {
    // General margin
    @each $size-name, $size-value in $sizes {
      .b\:m-#{$bp}-#{$size-name} {
        margin: size($size-value) !important;
      }
    }


    // Sides margins
    @each $side-name, $side-value in $sides {
      @each $size-name, $size-value in $sizes {
        .b\:m#{$side-name}-#{$bp}-#{$size-name} {
          @if $side-name == x {
            margin-left: size($size-value) !important;
            margin-right: size($size-value) !important;
          }
          @else if $side-name == y {
            margin-top: size($size-value) !important;
            margin-bottom: size($size-value) !important;
          }
          @else {
            margin-#{$side-value}: size($size-value) !important;
          }
        }
      }
    }
  }
}
